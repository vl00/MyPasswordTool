<UserControl x:Class="MyPasswordTool.Views.TreepanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:common="clr-namespace:Common"
			 xmlns:local="clr-namespace:MyPasswordTool"
             mc:Ignorable="d" x:Name="treearea" d:DesignHeight="460" d:DesignWidth="180"
             common:MvvmUtil.IsAutoSetViewModel="True"
			 Background="#FFE0E0E0" BorderThickness="1,0,0,0" BorderBrush="#FFE0E0E0">
    <!--             xmlns:slex_wpf="http://www.mvvm.org/silverex/wpf"   -->
    <!--FFF8F8F8-->
    <UserControl.Resources>
		<!--ContextMenu PlacementTarget=TreeViewItem,DataContext=this.DataContext,Tag=TreeViewItem.DataContext-->
		<ContextMenu x:Key="cm_Trash" >
			<MenuItem Header="清空" Command="{Binding TrashCmd}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}, Mode=FindAncestor}}" />
		</ContextMenu>
		<ContextMenu x:Key="cm_all">
			<MenuItem Header="添加" Command="{Binding AddTagCmd}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}, Mode=FindAncestor}}" />
        </ContextMenu>
		<ContextMenu x:Key="cm_selID">
			<MenuItem Header="重命名" Command="{Binding RenameCmd}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}, Mode=FindAncestor}}" />
			<MenuItem Header="添加" Command="{Binding AddTagCmd}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}, Mode=FindAncestor}}" />
			<MenuItem Header="删除" Command="{Binding DelTagCmd}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}, Mode=FindAncestor}}" />
		</ContextMenu>
        <DataTemplate x:Key="DragAdorner">
            <Border Background="Silver" BorderBrush="Gray" BorderThickness="1" CornerRadius="2" Margin="1">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding TagICO}" Width="16" Height="16" VerticalAlignment="Center" />
                    <TextBlock Text="{Binding Name}" Margin="0,0,2,0" VerticalAlignment="Center" />
                </StackPanel>
            </Border>
        </DataTemplate>
        <HierarchicalDataTemplate x:Key="TreeViewItemDataTemplate1" ItemsSource="{Binding Nodes}">
            <Border local:Consts.DrapDropGroup="tag,tag_dropinto,painfo" dd:DragDrop.IsDropTarget="True"
        		    dd:DragDrop.DropHandler="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeView}, Mode=FindAncestor}}"
        		>
                <Button Style="{StaticResource ButtonPanelStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Tag.SelCmd, ElementName=sp_TreeViewItem}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel x:Name="sp_TreeViewItem" Orientation="Horizontal" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeView}, Mode=FindAncestor}}">
                        <Image Source="{Binding TagICO}" Width="16" Height="16" SnapsToDevicePixels="True" />
                        <TextBlock Text="{Binding Name}" Margin="1" Foreground="Black"/> 
                    </StackPanel>
                </Button>
            </Border>          
        </HierarchicalDataTemplate>
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Converter={StaticResource BoolNullValueConverter}, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Converter={StaticResource BoolNullValueConverter}, Mode=TwoWay}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <EventSetter Event="UIElement.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TreeViewItem}">
        				<Grid>
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition MinWidth="19" Width="Auto"/>
        						<ColumnDefinition Width="Auto"/>
        						<ColumnDefinition Width="*"/>
        					</Grid.ColumnDefinitions>
        					<Grid.RowDefinitions>
        						<RowDefinition Height="Auto"/>
        						<RowDefinition/>
        					</Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" Style="{StaticResource ExpandCollapseToggleStyle}"
                                          Visibility="{Binding HasChild, Converter={StaticResource vc_BoolNullToVisibilityValueConverter},Mode=TwoWay}"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Click="Expander_Click" />
        					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
        						<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</Border>
        					<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
        				</Grid>
        				<ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <!--<Trigger Property="HasItems" Value="true">
        						<Setter Property="Visibility" TargetName="Expander" Value="Visible"/>
        					</Trigger>-->
        					<Trigger Property="IsSelected" Value="true">
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        					</Trigger>
        					<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
        							<Condition Property="IsSelectionActive" Value="false"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
        					</MultiTrigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<Style.Triggers>
        		<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        			<Setter Property="ItemsPanel">
        				<Setter.Value>
        					<ItemsPanelTemplate>
        						<VirtualizingStackPanel/>
        					</ItemsPanelTemplate>
        				</Setter.Value>
        			</Setter>
        		</Trigger>
        	</Style.Triggers>
        </Style>
    </UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
            <RowDefinition Height="{Binding Height,Source={StaticResource foot_RowDefinition}}"/>
		</Grid.RowDefinitions>

		<Grid Margin="5,0" >
			<Border x:Name="sp_left" BorderThickness="0,2,0,0" Grid.RowSpan="2">
				<TreeView BorderThickness="0" VirtualizingPanel.IsVirtualizing="True"
					ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
					Width="{Binding Width, ElementName=sp_left}" Style="{StaticResource TreeViewStyle1}" 
					ItemTemplate="{StaticResource TreeViewItemDataTemplate1}" 
					ItemContainerStyle="{StaticResource TreeViewItemStyle1}"    
					ItemsSource="{Binding TreeNodes}" 
					local:Consts.DrapDropGroup="tag"
					dd:DragDrop.IsDragSource="True"
					dd:DragDrop.IsDropTarget="True"
					dd:DragDrop.DragHandler="{Binding}"
					dd:DragDrop.DropHandler="{Binding}"
					dd:DragDrop.DragAdornerTemplate="{StaticResource DragAdorner}" 
				/>
			</Border>
		</Grid>

        <Border Grid.Row="2" Background="{StaticResource footer_GrayBackground}" BorderThickness="0,1,0,0" BorderBrush="{StaticResource arealine_Brush}" >
        </Border>
	</Grid>
</UserControl>
